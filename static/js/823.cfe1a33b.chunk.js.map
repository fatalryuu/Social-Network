{"version":3,"file":"static/js/823.cfe1a33b.chunk.js","mappings":"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","sources":["webpack://react-kabzda-1/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatus/ProfileStatus.tsx","components/Profile/ProfileInfo/ContactForm/ContactLabels.tsx","components/Profile/ProfileInfo/ContactForm/ContactInputs.tsx","components/Profile/ProfileInfo/ProfileDataForm/ProfileDataForm.tsx","components/Profile/ProfileInfo/Contact/Contact.tsx","components/Profile/ProfileInfo/ProfileData/ProfileData.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","webpack://react-kabzda-1/./src/components/Profile/Profile.module.css?b512","webpack://react-kabzda-1/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://react-kabzda-1/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/ProfileInfo/FollowedUser/FollowedUser.tsx","components/Profile/Profile.tsx","components/Common/withRouter/withRouter.tsx","components/Profile/ProfileContainer.tsx","../node_modules/@mui/icons-material/Done.js","../node_modules/@mui/icons-material/Favorite.js","../node_modules/@mui/icons-material/Upload.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"profile_info\":\"ProfileInfo_profile_info__NakLG\",\"avatar\":\"ProfileInfo_avatar__v3lLj\",\"image\":\"ProfileInfo_image__DDweF\",\"fileUpload\":\"ProfileInfo_fileUpload__-oFCM\",\"buttons\":\"ProfileInfo_buttons__siaCO\",\"edit\":\"ProfileInfo_edit__m8BFh\",\"edit_disabled\":\"ProfileInfo_edit_disabled__p-8nP\",\"upload\":\"ProfileInfo_upload__N-5kY\",\"icon\":\"ProfileInfo_icon__vGOUM\",\"info\":\"ProfileInfo_info__miP9O\",\"editing\":\"ProfileInfo_editing__iNnOh\",\"upper\":\"ProfileInfo_upper__H6yAG\",\"name\":\"ProfileInfo_name__3FB6v\",\"status\":\"ProfileInfo_status__SkwpM\",\"form\":\"ProfileInfo_form__97k-R\",\"columns\":\"ProfileInfo_columns__5WXEc\",\"labels\":\"ProfileInfo_labels__1SqGr\",\"inputs\":\"ProfileInfo_inputs__chCEy\",\"contact_input\":\"ProfileInfo_contact_input__J+vK8\",\"about\":\"ProfileInfo_about__Q+iRk\",\"soft_skills\":\"ProfileInfo_soft_skills__lWm1D\",\"contact\":\"ProfileInfo_contact__4JCMo\"};","import React, {useEffect, useState} from 'react';\r\nimport DoneIcon from \"@mui/icons-material/Done\";\r\nimport s from '../ProfileInfo.module.css'\r\n\r\ntype PropsType = {\r\n    status: string | null\r\n    updateStatus: (status: string | null) => void\r\n    isOwner: boolean\r\n}\r\n\r\nconst ProfileStatus: React.FC<PropsType> = (props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        props.isOwner ? setEditMode(true) : null;\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode ? (\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode}>{!props.status ? \"No status\" : props.status}</span>\r\n                </div>\r\n            ) : (\r\n                <div>\r\n                    <form onSubmit={deactivateEditMode}>\r\n                        <div>\r\n                            <input onChange={onStatusChange} autoFocus={true} value={status ? status : \"\"} onBlur={deactivateEditMode}/>\r\n                            <button type=\"submit\"><DoneIcon style={{width: \"10px\", height: \"10px\", padding: 0}}/></button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatus;","import React from 'react';\r\n\r\ntype PropsType = {\r\n    contactTitle: string\r\n    contactValue: string\r\n    register: any\r\n}\r\n\r\nconst ContactLabels: React.FC<PropsType> = ({contactTitle, contactValue, register}) => {\r\n    return (\r\n        <div>\r\n            <b>{contactTitle}: </b>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ContactLabels;","import React from 'react';\r\nimport s from \"../ProfileInfo.module.css\";\r\n\r\ntype PropsType = {\r\n    contactTitle: string\r\n    contactValue: string\r\n    register: any\r\n}\r\n\r\nconst ContactInputs: React.FC<PropsType> = ({contactTitle, contactValue, register}) => {\r\n    return (\r\n        <div>\r\n            <input className={s.contact_input} placeholder={'Type here...'} type=\"text\"\r\n                   defaultValue={contactValue} {...register(\"contacts.\" + contactTitle, {required: false})}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ContactInputs;","import React from 'react';\r\nimport {useForm} from \"react-hook-form\";\r\nimport s from \"../ProfileInfo.module.css\";\r\nimport ContactLabels from \"../ContactForm/ContactLabels\";\r\nimport {ProfileType} from \"../../../../types/types\";\r\nimport ContactInputs from \"../ContactForm/ContactInputs\";\r\nimport DoneIcon from '@mui/icons-material/Done';\r\n\r\ntype PropsType = {\r\n    profile: ProfileType\r\n    setEditMode: (editMode: boolean) => void\r\n    setIsEnabled: (isEnabled: boolean) => void\r\n    saveProfileInfo: (info: ProfileType) => any\r\n}\r\n\r\nconst ProfileDataForm: React.FC<PropsType> = ({profile, setEditMode, setIsEnabled, saveProfileInfo}) => {\r\n    const {register, handleSubmit} = useForm();\r\n    const onSubmit = (d: any) => {\r\n        if (profile)\r\n            d[\"fullName\"] = profile.fullName;\r\n        saveProfileInfo(d)\r\n            .then(() => setEditMode(false));\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={handleSubmit(onSubmit)} className={s.form}>\r\n                <div className={`${s.columns} ${s.labels}`}>\r\n                    <div>\r\n                        <b>About me: </b>\r\n                    </div>\r\n                    <div>\r\n                        <b>Looking for a job: </b>\r\n                    </div>\r\n                    <div>\r\n                        <b>Soft skills: </b>\r\n                    </div>\r\n                    {(Object.keys(profile.contacts) as Array<keyof typeof profile.contacts>).map(key => <ContactLabels\r\n                        register={register} key={key} contactTitle={key}\r\n                        contactValue={profile.contacts[key]}/>)}\r\n                </div>\r\n                <div className={`${s.columns} ${s.inputs}`}>\r\n                    <div>\r\n                        <input type=\"text\" {...register(\"aboutMe\", {required: false})}\r\n                               defaultValue={profile.aboutMe}\r\n                               onBlur={() => {\r\n                               }} placeholder={'Type here...'} className={s.about}/>\r\n                    </div>\r\n                    <div>\r\n                        <input type=\"checkbox\"\r\n                               defaultChecked={profile.lookingForAJob}\r\n                               placeholder={'Type here...'} {...register(\"lookingForAJob\", {required: false})}/>\r\n                    </div>\r\n                    <div>\r\n                        <input type=\"text\" {...register(\"lookingForAJobDescription\", {required: false})}\r\n                               defaultValue={profile.lookingForAJobDescription}\r\n                               onBlur={() => {\r\n                               }} placeholder={'Type here...'} className={s.soft_skills}/>\r\n                    </div>\r\n                    {(Object.keys(profile.contacts) as Array<keyof typeof profile.contacts>).map(key => <ContactInputs\r\n                        register={register} key={key} contactTitle={key}\r\n                        contactValue={profile.contacts[key]}/>)}\r\n                </div>\r\n                <div>\r\n                    <button onClick={() => setIsEnabled(true)}><DoneIcon style={{width: \"15px\"}}/></button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ProfileDataForm;","import React from 'react';\r\nimport s from '../ProfileInfo.module.css'\r\n\r\ntype PropsType = {\r\n    contactTitle: string\r\n    contactValue: string\r\n}\r\n\r\nconst Contact: React.FC<PropsType> = ({contactTitle, contactValue}) => {\r\n    return (\r\n        <div>\r\n            {contactValue ? <div className={s.contact}>\r\n                <b>{contactTitle}: </b>\r\n                <a href={contactValue}>{contactValue}</a>\r\n            </div> : null}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Contact;","import React from 'react';\r\nimport s from \"../ProfileInfo.module.css\";\r\nimport Contact from \"../Contact/Contact\";\r\nimport {ProfileType} from \"../../../../types/types\";\r\n\r\ntype PropsType = {\r\n    profile: ProfileType\r\n    isOwner: boolean\r\n}\r\n\r\nconst ProfileData: React.FC<PropsType> = ({profile, isOwner}) => {\r\n    return <>\r\n        {profile.aboutMe ? <div>\r\n            <b>About me: </b>\r\n            <span>{profile.aboutMe}</span>\r\n        </div> : null}\r\n        <div>\r\n            <b>Looking for a job: </b>\r\n            {profile.lookingForAJob ? 'Yes' : 'No'}\r\n        </div>\r\n        {profile.lookingForAJob ?\r\n            <div className={s.job}>\r\n                <b>Soft skills: </b>\r\n                {profile.lookingForAJob ? profile.lookingForAJobDescription : null}\r\n            </div> : null}\r\n        {(Object.keys(profile.contacts) as Array<keyof typeof profile.contacts>).map(key => <Contact key={key} contactTitle={key}\r\n                                                                                                      contactValue={profile.contacts[key]}/>)}\r\n        </>\r\n}\r\n\r\nexport default ProfileData;","import React, {useState} from 'react';\r\nimport s from './ProfileInfo.module.css'\r\nimport avatar from '../../../img/post_avatar_big.png'\r\nimport Preloader from \"../../Common/Preloader/Preloader\";\r\nimport ProfileStatus from \"./ProfileStatus/ProfileStatus\";\r\nimport ProfileDataForm from \"./ProfileDataForm/ProfileDataForm\";\r\nimport ProfileData from \"./ProfileData/ProfileData\";\r\nimport {ProfileType} from \"../../../types/types\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {getAmountOfFollowed, getProfileIsFetching} from \"../../../redux/selectors\";\r\nimport UploadIcon from '@mui/icons-material/Upload';\r\n\r\ntype PropsType = {\r\n    profile: ProfileType | null\r\n    status: string | null\r\n    updateStatus: (status: string | null) => void\r\n    isOwner: boolean\r\n    savePhoto: (photo: any) => void\r\n    saveProfileInfo: (info: ProfileType) => void\r\n}\r\n\r\nconst ProfileInfo: React.FC<PropsType> = ({profile, status, updateStatus, isOwner, savePhoto, saveProfileInfo}) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [isEnabled, setIsEnabled] = useState(true);\r\n    const isFetching = useSelector(getProfileIsFetching);\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const onAvatarSelected = (e: any) => {\r\n        if (e.target.files.length)\r\n            savePhoto(e.target.files[0]);\r\n    }\r\n    return (\r\n        <div className={s.profile_info}>\r\n            <div className={s.avatar}>\r\n                {isFetching ? <Preloader/> :\r\n                    <div className={s.image}>\r\n                        <img src={profile.photos.large !== null ? profile.photos.large : avatar} alt=\"\" />\r\n                        {isOwner ?\r\n                            <span className={s.fileUpload}>\r\n                            <input type=\"file\" onChange={onAvatarSelected} className={s.upload} id=\"file-input\"/>\r\n                            <label className={s.icon} htmlFor=\"file-input\">\r\n                                <UploadIcon/>\r\n                            </label>\r\n                        </span> : null}\r\n                    </div>}\r\n                <div className={s.buttons}>\r\n                    {isOwner ?\r\n                        <button disabled={!isEnabled} onClick={() => {\r\n                            setEditMode(true);\r\n                            setIsEnabled(false);\r\n                        }} className={isEnabled ? s.edit : s.edit_disabled}>Edit profile</button> : null}\r\n                </div>\r\n            </div>\r\n            <div className={editMode ? s.editing : s.info}>\r\n                <div className={s.upper}>\r\n                    <div className={s.name}>{profile.fullName}</div>\r\n                    <span className={s.status}><ProfileStatus status={status} updateStatus={updateStatus} isOwner={isOwner}/></span>\r\n                </div>\r\n                {editMode ?\r\n                    <ProfileDataForm profile={profile} setEditMode={setEditMode} setIsEnabled={setIsEnabled} saveProfileInfo={saveProfileInfo}/> :\r\n                    <ProfileData profile={profile} isOwner={isOwner}/>}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProfileInfo;","// extracted by mini-css-extract-plugin\nexport default {\"amount_wrapper_low\":\"Profile_amount_wrapper_low__t7Y2Y\",\"amount_wrapper_high\":\"Profile_amount_wrapper_high__7-ejX\",\"amount_string\":\"Profile_amount_string__CN6wF\",\"amount\":\"Profile_amount__VyaAZ\",\"upper\":\"Profile_upper__bkt+O\",\"followed_users_low\":\"Profile_followed_users_low__pEphI\",\"followed_users_high\":\"Profile_followed_users_high__Mk9Ug\",\"followed_user\":\"Profile_followed_user__tc+Rc\",\"followed_name\":\"Profile_followed_name__+MCbC\",\"followed_string\":\"Profile_followed_string__g0JIJ\",\"lower\":\"Profile_lower__meUyG\"};","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"MyPosts_form__AR2gf\",\"text\":\"MyPosts_text__2MS39\",\"posts\":\"MyPosts_posts__SmsFw\",\"newPost\":\"MyPosts_newPost__zAF6d\",\"posts_block\":\"MyPosts_posts_block__WYbPj\"};","// extracted by mini-css-extract-plugin\nexport default {\"post_wrapper\":\"Post_post_wrapper__P23VN\",\"first_post\":\"Post_first_post__0uYd5\",\"upper\":\"Post_upper__bsQs1\",\"writer_info\":\"Post_writer_info__EcQml\",\"wrap\":\"Post_wrap__2h3gm\",\"string\":\"Post_string__rGLHd\"};","import React, {useState} from 'react';\r\nimport s from './Post.module.css'\r\nimport avatar from '../../../../img/post_avatar.png'\r\nimport {PostType} from \"../../../../types/types\";\r\nimport FavoriteIcon from '@mui/icons-material/Favorite';\r\n\r\ntype PropsType = {\r\n    postInfo: PostType\r\n    last: number\r\n}\r\n\r\nconst Post: React.FC<PropsType> = ({postInfo, last}) => {\r\n    const [likes, setLikes] = useState(postInfo.likesCount);\r\n    const [isLiked, setIsLiked] = useState(false);\r\n    const handleClick = () => {\r\n        if (isLiked)\r\n            setLikes(likes - 1);\r\n        else\r\n            setLikes(likes + 1);\r\n        setIsLiked(!isLiked);\r\n    }\r\n    return (\r\n        <div className={postInfo.id + 1 !== last ? s.post_wrapper : s.first_post}>\r\n            <div className={s.upper}>\r\n                <a href=\"\"><img src={postInfo.avatarUrl === null ? avatar : postInfo.avatarUrl} alt=\"\"/></a>\r\n                <div className={s.writer_info}>\r\n                    <div><a href=\"\">{postInfo.name}</a></div>\r\n                    <div>{postInfo.date}</div>\r\n                </div>\r\n            </div>\r\n            <div>{postInfo.message}</div>\r\n            <div>\r\n                <span className={s.wrap}>\r\n                    <FavoriteIcon style={isLiked ? {color: \"red\", cursor: \"pointer\"} : {color: \"white\", cursor: \"pointer\"}} onClick={handleClick}/>\r\n                    <span className={s.string}>{likes}</span>\r\n                </span>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css'\r\nimport Post from \"./Post/Post\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getPosts} from \"../../../redux/selectors\";\r\nimport {actions} from \"../../../redux/profileReducer\";\r\nimport {AppDispatch} from \"../../../redux/store\";\r\n\r\nconst MyPosts: React.FC = () => {\r\n    const {register, handleSubmit, reset} = useForm();\r\n    const posts = useSelector(getPosts);\r\n    const dispatch: AppDispatch = useDispatch();\r\n    let postsElements = posts.map(p => <Post postInfo={p} key={p.id} last={posts.length}/>).reverse();\r\n\r\n    const onSubmit = (d: any) => {\r\n        dispatch(actions.addPost(d.post));\r\n        reset();\r\n    }\r\n\r\n    return (\r\n        <div className={s.posts_block}>\r\n            <form onSubmit={handleSubmit(onSubmit)} className={s.form}>\r\n                <div className={s.newPost}>\r\n                    <div>\r\n                        <input type=\"text\" placeholder=\"Type here...\" autoComplete=\"off\" {...register(\"post\", {required: true})}/>\r\n                    </div>\r\n                    <div>\r\n                        <button>Add post</button>\r\n                    </div>\r\n                </div>\r\n                <div className={s.text}>All posts</div>\r\n                <div className={s.posts}>\r\n                    {postsElements}\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {UserType} from \"../../../../types/types\";\r\nimport avatar from '../../../../img/post_avatar.png'\r\nimport s from '../../Profile.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\ntype PropsType = {\r\n    user: UserType;\r\n}\r\n\r\nconst FollowedUser: React.FC<PropsType> = ({user}) => {\r\n    let name = user.name;\r\n    if (user.name.length > 7) {\r\n        name = user.name.slice(0, 6) + \"...\";\r\n    }\r\n    return (\r\n        <div className={s.followed_user}>\r\n            <div className={s.followed_avatar}>\r\n                <NavLink to={'/profile/' + user.id}>\r\n                    <img src={user.photos.small !== null ? user.photos.small : avatar} alt=\"\"/>\r\n                </NavLink>\r\n            </div>\r\n            <div className={s.followed_name}>\r\n                <NavLink to={'/profile/' + user.id}>\r\n                    {name}\r\n                </NavLink>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FollowedUser;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport {ProfileType} from \"../../types/types\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {getAmountOfFollowed, getFollowedUsers} from \"../../redux/selectors\";\r\nimport s from './Profile.module.css'\r\nimport MyPosts from \"./MyPosts/MyPosts\";\r\nimport FollowedUser from \"./ProfileInfo/FollowedUser/FollowedUser\";\r\n\r\ntype PropsType = {\r\n    isOwner: boolean\r\n    profile: ProfileType | null\r\n    status: string\r\n    updateStatus: (status: string | null) => void\r\n    savePhoto: (photo: any) => void\r\n    saveProfileInfo: (info: ProfileType) => void\r\n}\r\n\r\nconst Profile: React.FC<PropsType> = (props) => {\r\n    const amountOfFollowed = useSelector(getAmountOfFollowed);\r\n    const followedUsers = useSelector(getFollowedUsers);\r\n    let usersToShow = [];\r\n    let indexes = [] as number[];\r\n    if (followedUsers.length > 6) {\r\n        for (let i = 0; i < 6; i++) {\r\n            let index = Math.floor(Math.random() * followedUsers.length);\r\n            while (indexes.includes(index)) {\r\n                index = Math.floor(Math.random() * followedUsers.length);\r\n            }\r\n            indexes.push(index);\r\n            usersToShow.push(followedUsers[index]);\r\n        }\r\n    } else {\r\n        followedUsers.map(u => usersToShow.push(u));\r\n    }\r\n    return (\r\n        <div>\r\n            <ProfileInfo isOwner={props.isOwner} profile={props.profile} status={props.status}\r\n                         updateStatus={props.updateStatus} savePhoto={props.savePhoto}\r\n                         saveProfileInfo={props.saveProfileInfo}/>\r\n            {props.isOwner ? <div className={s.lower}>\r\n                <div className={usersToShow.length < 4 ? s.amount_wrapper_low : s.amount_wrapper_high}>\r\n                    <div className={s.amount_string}>\r\n                        <div className={s.upper}>\r\n                            <span className={s.followed_string}>Followed </span>\r\n                            <span className={s.amount}>{amountOfFollowed}</span>\r\n                        </div>\r\n                        <div className={usersToShow.length < 4 ? s.followed_users_low : s.followed_users_high}>\r\n                            {usersToShow.map(u => <FollowedUser key={u.id} user={u}/>)}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <MyPosts/>\r\n            </div> : null}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profile;","import {useParams} from \"react-router-dom\";\r\nimport React from \"react\";\r\n\r\nconst withRouter = (Children: any) => {\r\n    return (props: any) => {\r\n        const match  = {params: useParams()};\r\n        return <Children {...props}  match={match}/>\r\n    }\r\n}\r\n\r\nexport default withRouter;","import React, {useEffect} from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getProfile, getStatus, savePhoto, saveProfileInfo, updateStatus} from \"../../redux/profileReducer\";\r\nimport withAuthRedirect from \"../HOC/withAuthRedirect\";\r\nimport {compose} from \"@reduxjs/toolkit\";\r\nimport withRouter from \"../Common/withRouter/withRouter\";\r\nimport {AppStateType} from \"../../redux/store\";\r\nimport {ProfileType} from \"../../types/types\";\r\n\r\ntype PropsType = MapStatePropsType & MapDispatchToProps;\r\n\r\ntype MapStatePropsType = ReturnType<typeof mapStateToProps>;\r\n\r\ntype MapDispatchToProps = {\r\n    getProfile: (userID: number) => void\r\n    getStatus: (userID: number) => void\r\n    updateStatus: (status: string | null) => void\r\n    savePhoto: (photo: File) => void\r\n    saveProfileInfo: (info: ProfileType) => void\r\n}\r\n\r\nclass ProfileContainer extends React.Component<PropsType> {\r\n    refreshProfile() {\r\n        // @ts-ignore\r\n        let userID = this.props.match.params.userID;\r\n        if (!userID)\r\n            userID = this.props.authorizedUserID;\r\n        this.props.getProfile(userID);\r\n        this.props.getStatus(userID);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps: PropsType, prevState: PropsType) {\r\n        //@ts-ignore\r\n        if (this.props.match.params.userID !== prevProps.match.params.userID)\r\n            this.refreshProfile();\r\n    }\r\n\r\n    render() {\r\n        return <Profile {...this.props} profile={this.props.profile} status={this.props.status}\r\n                        updateStatus={this.props.updateStatus}\r\n                        //@ts-ignore\r\n                        isOwner={!this.props.match.params.userID}\r\n                        savePhoto={this.props.savePhoto}\r\n                        saveProfileInfo={this.props.saveProfileInfo}\r\n        />\r\n    }\r\n}\r\n\r\n// const ProfileContainer: React.FC<PropsType> = (props) => {\r\n//     const {userID} = useParams();\r\n//     const refreshProfile = () => {\r\n//         console.log(userID)\r\n//         if (!userID) {\r\n//             const myID = 27510;  //27094\r\n//             props.getProfile(myID);\r\n//             props.getStatus(myID);\r\n//         } else {\r\n//             props.getProfile(+userID);\r\n//             props.getStatus(+userID);\r\n//         }\r\n//     }\r\n//\r\n//     useEffect(() => {\r\n//         refreshProfile();\r\n//     }, []);\r\n//\r\n//     useEffect(() => {\r\n//         // if (props.match.params.userID !== prevProps.match.params.userID)\r\n//             refreshProfile();\r\n//     });\r\n//\r\n//\r\n//     return (\r\n//         <Profile {...props} profile={props.profile} status={props.status}\r\n//                  updateStatus={props.updateStatus}\r\n//                  isOwner={!userID}\r\n//                  savePhoto={props.savePhoto}\r\n//                  saveProfileInfo={props.saveProfileInfo}\r\n//         />)\r\n// }\r\n\r\nconst mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authorizedUserID: state.auth.userID\r\n    }\r\n}\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, {getProfile, getStatus, updateStatus, savePhoto, saveProfileInfo}),\r\n    withRouter,\r\n    withAuthRedirect)(ProfileContainer);","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M9 16.2 4.8 12l-1.4 1.4L9 19 21 7l-1.4-1.4L9 16.2z\"\n}), 'Done');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"m12 21.35-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z\"\n}), 'Favorite');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M5 20h14v-2H5v2zm0-10h4v6h6v-6h4l-7-7-7 7z\"\n}), 'Upload');\nexports.default = _default;"],"names":["props","useState","editMode","setEditMode","status","setStatus","useEffect","deactivateEditMode","updateStatus","onSubmit","onChange","e","currentTarget","value","autoFocus","onBlur","type","Done","style","width","height","padding","onDoubleClick","isOwner","contactTitle","contactValue","register","className","s","placeholder","defaultValue","required","profile","setIsEnabled","saveProfileInfo","useForm","handleSubmit","d","fullName","then","Object","keys","contacts","map","key","aboutMe","defaultChecked","lookingForAJob","lookingForAJobDescription","onClick","href","savePhoto","isEnabled","isFetching","useSelector","getProfileIsFetching","Preloader","src","photos","large","avatar","alt","target","files","length","id","htmlFor","Upload","disabled","postInfo","last","likesCount","likes","setLikes","isLiked","setIsLiked","avatarUrl","name","date","message","Favorite","color","cursor","reset","posts","getPosts","dispatch","useDispatch","postsElements","p","reverse","actions","post","autoComplete","user","slice","to","small","amountOfFollowed","getAmountOfFollowed","followedUsers","getFollowedUsers","usersToShow","indexes","i","index","Math","floor","random","includes","push","u","Children","match","params","useParams","ProfileContainer","userID","this","authorizedUserID","getProfile","getStatus","refreshProfile","prevProps","prevState","React","compose","connect","state","profilePage","auth","withRouter","withAuthRedirect","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx"],"sourceRoot":""}