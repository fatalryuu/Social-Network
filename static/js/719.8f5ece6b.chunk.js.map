{"version":3,"file":"static/js/719.8f5ece6b.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/esm/createSuper.js","../node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","webpack://react-kabzda-1/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatus/ProfileStatus.tsx","components/Profile/ProfileInfo/ContactForm/ContactForm.tsx","components/Profile/ProfileInfo/ProfileDataForm/ProfileDataForm.tsx","components/Profile/ProfileInfo/Contact/Contact.tsx","components/Profile/ProfileInfo/ProfileData/ProfileData.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","webpack://react-kabzda-1/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://react-kabzda-1/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/Profile.tsx","components/Common/withRouter/withRouter.tsx","components/Profile/ProfileContainer.tsx","../node_modules/@babel/runtime/helpers/esm/inherits.js"],"sourcesContent":["export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","import _typeof from \"./typeof.js\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return assertThisInitialized(self);\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nimport possibleConstructorReturn from \"./possibleConstructorReturn.js\";\nexport default function _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return possibleConstructorReturn(this, result);\n  };\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","// extracted by mini-css-extract-plugin\nexport default {\"profile_info\":\"ProfileInfo_profile_info__H3D-z\",\"avatar\":\"ProfileInfo_avatar__OJq4I\",\"info\":\"ProfileInfo_info__blXPI\",\"name\":\"ProfileInfo_name__adacu\",\"about\":\"ProfileInfo_about__pyyvZ\",\"job\":\"ProfileInfo_job__S9tI2\"};","import React, {useEffect, useState} from 'react';\r\n\r\ntype PropsType = {\r\n    status: string | null\r\n    updateStatus: (status: string | null) => void\r\n    isOwner: boolean\r\n}\r\n\r\nconst ProfileStatus: React.FC<PropsType> = (props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        props.isOwner ? setEditMode(true) : null;\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode ? (\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode}>{!props.status ? \"No status\" : props.status}</span>\r\n                </div>\r\n            ) : (\r\n                <div>\r\n                    <input onChange={onStatusChange} autoFocus={true} value={status ? status : \"\"} onBlur={deactivateEditMode}/>\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatus;","import React from 'react';\r\n\r\ntype PropsType = {\r\n    contactTitle: string\r\n    contactValue: string\r\n    register: any\r\n}\r\n\r\nconst ContactForm: React.FC<PropsType> = ({contactTitle, contactValue, register}) => {\r\n    return (\r\n        <div>\r\n            <b>{contactTitle}: </b>\r\n            <input type=\"text\" defaultValue={contactValue} {...register(\"contacts.\" + contactTitle, {required: false})}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ContactForm;","import React from 'react';\r\nimport {useForm} from \"react-hook-form\";\r\nimport s from \"../ProfileInfo.module.css\";\r\nimport ContactForm from \"../ContactForm/ContactForm\";\r\nimport {ProfileType} from \"../../../../types/types\";\r\n\r\ntype PropsType = {\r\n    profile: ProfileType\r\n    setEditMode: (editMode: boolean) => void\r\n    saveProfileInfo: (info: ProfileType) => any\r\n}\r\n\r\nconst ProfileDataForm: React.FC<PropsType> = ({profile, setEditMode, saveProfileInfo}) => {\r\n    const {register, handleSubmit} = useForm();\r\n    const onSubmit = (d: any) => {\r\n        if (profile)\r\n            d[\"fullName\"] = profile.fullName;\r\n        saveProfileInfo(d)\r\n            .then(() => setEditMode(false));\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n                <div className={s.about}>\r\n                    <b>About me: </b>\r\n                    <input type=\"text\" {...register(\"aboutMe\", {required: false})}\r\n                           defaultValue={profile.aboutMe}\r\n                           onBlur={() => {\r\n                           }} placeholder={'About Me'}/>\r\n                </div>\r\n                <div>\r\n                    <b>Looking for a job: </b>\r\n                    <input type=\"checkbox\" defaultChecked={profile.lookingForAJob} {...register(\"lookingForAJob\", {required: false})}/>\r\n                </div>\r\n                <div className={s.job}>\r\n                    <b>Soft skills: </b>\r\n                    <input type=\"text\" {...register(\"lookingForAJobDescription\", {required: false})}\r\n                           defaultValue={profile.lookingForAJobDescription}\r\n                           onBlur={() => {\r\n                           }} placeholder={'Soft skills'}/>\r\n                </div>\r\n                {(Object.keys(profile.contacts) as Array<keyof typeof profile.contacts>).map(key => <ContactForm register={register} key={key} contactTitle={key}\r\n                                                                   contactValue={profile.contacts[key]}/>)}\r\n                <button>Done</button>\r\n            </form>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ProfileDataForm;","import React from 'react';\r\n\r\ntype PropsType = {\r\n    contactTitle: string\r\n    contactValue: string\r\n}\r\n\r\nconst Contact: React.FC<PropsType> = ({contactTitle, contactValue}) => {\r\n    return (\r\n        <div>\r\n            {contactValue ? <div>\r\n                <b>{contactTitle}: </b>\r\n                <a href={contactValue}>{contactValue}</a>\r\n            </div> : null}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Contact;","import React from 'react';\r\nimport s from \"../ProfileInfo.module.css\";\r\nimport Contact from \"../Contact/Contact\";\r\nimport {ProfileType} from \"../../../../types/types\";\r\n\r\ntype PropsType = {\r\n    profile: ProfileType\r\n    isOwner: boolean\r\n    goToEditMode: () => void\r\n}\r\n\r\nconst ProfileData: React.FC<PropsType> = ({profile, isOwner, goToEditMode}) => {\r\n    return <>\r\n        {isOwner ? <button onClick={goToEditMode}>edit</button> : null}\r\n        {profile.aboutMe ? <div>\r\n            <b>About me: </b>\r\n            <span className={s.about}>{profile.aboutMe}</span>\r\n        </div> : null}\r\n        <div>\r\n            <b>Looking for a job: </b>\r\n            {profile.lookingForAJob ? 'Yes' : 'No'}\r\n        </div>\r\n        {profile.lookingForAJob ?\r\n            <div className={s.job}>\r\n                <b>Soft skills: </b>\r\n                {profile.lookingForAJob ? profile.lookingForAJobDescription : null}\r\n            </div> : null}\r\n        {(Object.keys(profile.contacts) as Array<keyof typeof profile.contacts>).map(key => <Contact key={key} contactTitle={key}\r\n                                                                                                      contactValue={profile.contacts[key]}/>)}\r\n        </>\r\n}\r\n\r\nexport default ProfileData;","import React, {useState} from 'react';\r\nimport s from './ProfileInfo.module.css'\r\nimport avatar from '../../../img/user_avatar.jpg'\r\nimport Preloader from \"../../Common/Preloader/Preloader\";\r\nimport ProfileStatus from \"./ProfileStatus/ProfileStatus\";\r\nimport ProfileDataForm from \"./ProfileDataForm/ProfileDataForm\";\r\nimport ProfileData from \"./ProfileData/ProfileData\";\r\nimport {ProfileType} from \"../../../types/types\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {getProfileIsFetching} from \"../../../redux/usersSelectors\";\r\n\r\ntype PropsType = {\r\n    profile: ProfileType | null\r\n    status: string | null\r\n    updateStatus: (status: string | null) => void\r\n    isOwner: boolean\r\n    savePhoto: (photo: any) => void\r\n    saveProfileInfo: (info: ProfileType) => void\r\n}\r\n\r\nconst ProfileInfo: React.FC<PropsType> = ({profile, status, updateStatus, isOwner, savePhoto, saveProfileInfo}) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    const isFetching = useSelector(getProfileIsFetching);\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const onAvatarSelected = (e: any) => {\r\n        if (e.target.files.length)\r\n            savePhoto(e.target.files[0]);\r\n    }\r\n\r\n    return (\r\n        <div className={s.profile_info}>\r\n            <div className={s.avatar}>\r\n                {isFetching ? <Preloader /> : <img src={profile.photos.large != null ? profile.photos.large : avatar} alt=\"\"/>}\r\n                <div>\r\n                    {isOwner ? <input type=\"file\" onChange={onAvatarSelected}/> : null}\r\n                </div>\r\n            </div>\r\n            <div className={s.info}>\r\n                <div className={s.name}>{profile.fullName}</div>\r\n                <ProfileStatus status={status} updateStatus={updateStatus} isOwner={isOwner}/>\r\n                {editMode ? <ProfileDataForm profile={profile} setEditMode={setEditMode} saveProfileInfo={saveProfileInfo}/> :\r\n                    <ProfileData profile={profile} isOwner={isOwner} goToEditMode={() => setEditMode(true)}/>}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProfileInfo;","// extracted by mini-css-extract-plugin\nexport default {\"text\":\"MyPosts_text__-+Ipi\",\"newPost\":\"MyPosts_newPost__B4LFh\",\"postsBlock\":\"MyPosts_postsBlock__2WPjJ\",\"posts\":\"MyPosts_posts__ct9Vp\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__qURPC\"};","import React from 'react';\r\nimport s from './Post.module.css'\r\nimport avatar from '../../../../img/post_avatar.png'\r\n\r\ntype PropsType = {\r\n    message: string\r\n    likes: number\r\n}\r\n\r\nconst Post: React.FC<PropsType> = (props) => {\r\n    return (\r\n        <div>\r\n            <div className={s.item}>\r\n                <img src={avatar} alt=\"\"/>\r\n                {props.message}\r\n                <div>\r\n                    <span>like count: {props.likes}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css'\r\nimport Post from \"./Post/Post\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport {PostType} from \"../../../types/types\";\r\n\r\ntype PropsType = {\r\n    posts: Array<PostType>\r\n    addPost: (newPostText: string) => void\r\n}\r\n\r\nconst MyPosts: React.FC<PropsType> = ({posts, addPost}) => {\r\n    const {register, handleSubmit, reset} = useForm();\r\n    let postsElements = posts.map(p => <Post message={p.message} likes={p.likesCount} key={p.id}/>)\r\n\r\n    const onSubmit = (d: any) => {\r\n        addPost(d.post);\r\n        reset();\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3 className={s.text}>My posts</h3>\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n                <div className={s.newPost}>\r\n                    <div>\r\n                        <textarea {...register(\"post\", {required: true})}></textarea>\r\n                    </div>\r\n                    <div>\r\n                        <button>Add post</button>\r\n                    </div>\r\n                </div>\r\n                <div className={s.posts}>\r\n                    {postsElements}\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {actions} from \"../../../redux/profileReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../../redux/store\";\r\nimport {PostType} from \"../../../types/types\";\r\n\r\ntype MapStatePropsType = {\r\n    posts: Array<PostType>\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    addPost: (newPostText: string) => void\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect<MapStatePropsType, MapDispatchPropsType, {}, AppStateType>(mapStateToProps, {addPost: actions.addPost})(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport {ProfileType} from \"../../types/types\";\r\n\r\ntype PropsType = {\r\n    isOwner: boolean\r\n    profile: ProfileType | null\r\n    status: string\r\n    updateStatus: (status: string | null) => void\r\n    savePhoto: (photo: any) => void\r\n    saveProfileInfo: (info: ProfileType) => void\r\n}\r\n\r\nconst Profile: React.FC<PropsType> = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo isOwner={props.isOwner} profile={props.profile} status={props.status}\r\n                         updateStatus={props.updateStatus} savePhoto={props.savePhoto}\r\n                         saveProfileInfo={props.saveProfileInfo}/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profile;","import {useParams} from \"react-router-dom\";\r\nimport React from \"react\";\r\n\r\nconst withRouter = (Children: any) => {\r\n    return (props: any) => {\r\n        const match  = {params: useParams()};\r\n        return <Children {...props}  match={match}/>\r\n    }\r\n}\r\n\r\nexport default withRouter;","import React, {useEffect} from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getProfile, getStatus, savePhoto, saveProfileInfo, updateStatus} from \"../../redux/profileReducer\";\r\nimport withAuthRedirect from \"../HOC/withAuthRedirect\";\r\nimport {compose} from \"@reduxjs/toolkit\";\r\nimport withRouter from \"../Common/withRouter/withRouter\";\r\nimport {AppStateType} from \"../../redux/store\";\r\nimport {ProfileType} from \"../../types/types\";\r\nimport {useParams} from \"react-router-dom\";\r\n\r\ntype PropsType = MapStatePropsType & MapDispatchToProps;\r\n\r\ntype MapStatePropsType = ReturnType<typeof mapStateToProps>;\r\n\r\ntype MapDispatchToProps = {\r\n    getProfile: (userID: number) => void\r\n    getStatus: (userID: number) => void\r\n    updateStatus: (status: string | null) => void\r\n    savePhoto: (photo: File) => void\r\n    saveProfileInfo: (info: ProfileType) => void\r\n}\r\n\r\nclass ProfileContainer extends React.Component<PropsType> {\r\n    refreshProfile() {\r\n        // @ts-ignore\r\n        let userID = this.props.match.params.userID;\r\n        if (!userID)\r\n            userID = this.props.authorizedUserID;\r\n        this.props.getProfile(userID);\r\n        this.props.getStatus(userID);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps: PropsType, prevState: PropsType) {\r\n        //@ts-ignore\r\n        if (this.props.match.params.userID !== prevProps.match.params.userID)\r\n            this.refreshProfile();\r\n    }\r\n\r\n    render() {\r\n        return <Profile {...this.props} profile={this.props.profile} status={this.props.status}\r\n                        updateStatus={this.props.updateStatus}\r\n                        //@ts-ignore\r\n                        isOwner={!this.props.match.params.userID}\r\n                        savePhoto={this.props.savePhoto}\r\n                        saveProfileInfo={this.props.saveProfileInfo}\r\n        />\r\n    }\r\n}\r\n\r\n// const ProfileContainer: React.FC<PropsType> = (props) => {\r\n//     const {userID} = useParams();\r\n//     const refreshProfile = () => {\r\n//         console.log(userID)\r\n//         if (!userID) {\r\n//             const myID = 27510;  //27094\r\n//             props.getProfile(myID);\r\n//             props.getStatus(myID);\r\n//         } else {\r\n//             props.getProfile(+userID);\r\n//             props.getStatus(+userID);\r\n//         }\r\n//     }\r\n//\r\n//     useEffect(() => {\r\n//         refreshProfile();\r\n//     }, []);\r\n//\r\n//     useEffect(() => {\r\n//         // if (props.match.params.userID !== prevProps.match.params.userID)\r\n//             refreshProfile();\r\n//     });\r\n//\r\n//\r\n//     return (\r\n//         <Profile {...props} profile={props.profile} status={props.status}\r\n//                  updateStatus={props.updateStatus}\r\n//                  isOwner={!userID}\r\n//                  savePhoto={props.savePhoto}\r\n//                  saveProfileInfo={props.saveProfileInfo}\r\n//         />)\r\n// }\r\n\r\nconst mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authorizedUserID: state.auth.userID\r\n    }\r\n}\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, {getProfile, getStatus, updateStatus, savePhoto, saveProfileInfo}),\r\n    withRouter,\r\n    withAuthRedirect)(ProfileContainer);","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}"],"names":["_setPrototypeOf","o","p","Object","setPrototypeOf","bind","__proto__","_getPrototypeOf","getPrototypeOf","_possibleConstructorReturn","self","call","TypeError","ReferenceError","_createSuper","Derived","hasNativeReflectConstruct","Reflect","construct","sham","Proxy","Boolean","prototype","valueOf","e","result","Super","NewTarget","this","constructor","arguments","apply","props","useState","editMode","setEditMode","status","setStatus","useEffect","onChange","currentTarget","value","autoFocus","onBlur","updateStatus","onDoubleClick","isOwner","contactTitle","contactValue","register","type","defaultValue","required","profile","saveProfileInfo","useForm","handleSubmit","onSubmit","d","fullName","then","className","s","aboutMe","placeholder","defaultChecked","lookingForAJob","lookingForAJobDescription","keys","contacts","map","key","href","goToEditMode","onClick","savePhoto","isFetching","useSelector","getProfileIsFetching","Preloader","src","photos","large","alt","target","files","length","avatar","message","likes","posts","addPost","reset","postsElements","likesCount","id","post","connect","state","profilePage","actions","MyPosts","Children","match","params","useParams","ProfileContainer","subClass","superClass","create","writable","configurable","defineProperty","userID","authorizedUserID","getProfile","getStatus","refreshProfile","prevProps","prevState","React","compose","auth","withRouter","withAuthRedirect"],"sourceRoot":""}