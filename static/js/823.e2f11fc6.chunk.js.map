{"version":3,"file":"static/js/823.e2f11fc6.chunk.js","mappings":"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","sources":["webpack://react-kabzda-1/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatus/ProfileStatus.tsx","components/Profile/ProfileInfo/ContactForm/ContactLabels.tsx","components/Profile/ProfileInfo/ContactForm/ContactInputs.tsx","components/Profile/ProfileInfo/ProfileDataForm/ProfileDataForm.tsx","components/Profile/ProfileInfo/Contact/Contact.tsx","components/Profile/ProfileInfo/ProfileData/ProfileData.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","webpack://react-kabzda-1/./src/components/Profile/Profile.module.css?b512","webpack://react-kabzda-1/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://react-kabzda-1/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/ProfileInfo/FollowedUser/FollowedUser.tsx","components/Profile/Profile.tsx","components/Common/withRouter/withRouter.tsx","components/Profile/ProfileContainer.tsx","../node_modules/@mui/icons-material/Done.js","../node_modules/@mui/icons-material/Upload.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"profile_info\":\"ProfileInfo_profile_info__NakLG\",\"avatar\":\"ProfileInfo_avatar__v3lLj\",\"image\":\"ProfileInfo_image__DDweF\",\"fileUpload\":\"ProfileInfo_fileUpload__-oFCM\",\"buttons\":\"ProfileInfo_buttons__siaCO\",\"edit\":\"ProfileInfo_edit__m8BFh\",\"edit_disabled\":\"ProfileInfo_edit_disabled__p-8nP\",\"upload\":\"ProfileInfo_upload__N-5kY\",\"icon\":\"ProfileInfo_icon__vGOUM\",\"info\":\"ProfileInfo_info__miP9O\",\"editing\":\"ProfileInfo_editing__iNnOh\",\"upper\":\"ProfileInfo_upper__H6yAG\",\"name\":\"ProfileInfo_name__3FB6v\",\"status\":\"ProfileInfo_status__SkwpM\",\"form\":\"ProfileInfo_form__97k-R\",\"columns\":\"ProfileInfo_columns__5WXEc\",\"labels\":\"ProfileInfo_labels__1SqGr\",\"inputs\":\"ProfileInfo_inputs__chCEy\",\"contact_input\":\"ProfileInfo_contact_input__J+vK8\",\"about\":\"ProfileInfo_about__Q+iRk\",\"soft_skills\":\"ProfileInfo_soft_skills__lWm1D\",\"contact\":\"ProfileInfo_contact__4JCMo\"};","import React, {useEffect, useState} from 'react';\r\n\r\ntype PropsType = {\r\n    status: string | null\r\n    updateStatus: (status: string | null) => void\r\n    isOwner: boolean\r\n}\r\n\r\nconst ProfileStatus: React.FC<PropsType> = (props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        props.isOwner ? setEditMode(true) : null;\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode ? (\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode}>{!props.status ? \"No status\" : props.status}</span>\r\n                </div>\r\n            ) : (\r\n                <div>\r\n                    <input onChange={onStatusChange} autoFocus={true} value={status ? status : \"\"} onBlur={deactivateEditMode}/>\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatus;","import React from 'react';\r\n\r\ntype PropsType = {\r\n    contactTitle: string\r\n    contactValue: string\r\n    register: any\r\n}\r\n\r\nconst ContactLabels: React.FC<PropsType> = ({contactTitle, contactValue, register}) => {\r\n    return (\r\n        <div>\r\n            <b>{contactTitle}: </b>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ContactLabels;","import React from 'react';\r\nimport s from \"../ProfileInfo.module.css\";\r\n\r\ntype PropsType = {\r\n    contactTitle: string\r\n    contactValue: string\r\n    register: any\r\n}\r\n\r\nconst ContactInputs: React.FC<PropsType> = ({contactTitle, contactValue, register}) => {\r\n    return (\r\n        <div>\r\n            <input className={s.contact_input} type=\"text\" defaultValue={contactValue} {...register(\"contacts.\" + contactTitle, {required: false})}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ContactInputs;","import React from 'react';\r\nimport {useForm} from \"react-hook-form\";\r\nimport s from \"../ProfileInfo.module.css\";\r\nimport ContactLabels from \"../ContactForm/ContactLabels\";\r\nimport {ProfileType} from \"../../../../types/types\";\r\nimport ContactInputs from \"../ContactForm/ContactInputs\";\r\nimport DoneIcon from '@mui/icons-material/Done';\r\n\r\ntype PropsType = {\r\n    profile: ProfileType\r\n    setEditMode: (editMode: boolean) => void\r\n    setIsEnabled: (isEnabled: boolean) => void\r\n    saveProfileInfo: (info: ProfileType) => any\r\n}\r\n\r\nconst ProfileDataForm: React.FC<PropsType> = ({profile, setEditMode, setIsEnabled, saveProfileInfo}) => {\r\n    const {register, handleSubmit} = useForm();\r\n    const onSubmit = (d: any) => {\r\n        if (profile)\r\n            d[\"fullName\"] = profile.fullName;\r\n        saveProfileInfo(d)\r\n            .then(() => setEditMode(false));\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={handleSubmit(onSubmit)} className={s.form}>\r\n                <div className={`${s.columns} ${s.labels}`}>\r\n                    <div>\r\n                        <b>About me: </b>\r\n                    </div>\r\n                    <div>\r\n                        <b>Looking for a job: </b>\r\n                    </div>\r\n                    <div>\r\n                        <b>Soft skills: </b>\r\n                    </div>\r\n                    {(Object.keys(profile.contacts) as Array<keyof typeof profile.contacts>).map(key => <ContactLabels\r\n                        register={register} key={key} contactTitle={key}\r\n                        contactValue={profile.contacts[key]}/>)}\r\n                </div>\r\n                <div className={`${s.columns} ${s.inputs}`}>\r\n                    <div>\r\n                        <input type=\"text\" {...register(\"aboutMe\", {required: false})}\r\n                               defaultValue={profile.aboutMe}\r\n                               onBlur={() => {\r\n                               }} placeholder={'About Me'} className={s.about}/>\r\n                    </div>\r\n                    <div>\r\n                        <input type=\"checkbox\"\r\n                               defaultChecked={profile.lookingForAJob} {...register(\"lookingForAJob\", {required: false})}/>\r\n                    </div>\r\n                    <div>\r\n                        <input type=\"text\" {...register(\"lookingForAJobDescription\", {required: false})}\r\n                               defaultValue={profile.lookingForAJobDescription}\r\n                               onBlur={() => {\r\n                               }} placeholder={'Soft skills'} className={s.soft_skills}/>\r\n                    </div>\r\n                    {(Object.keys(profile.contacts) as Array<keyof typeof profile.contacts>).map(key => <ContactInputs\r\n                        register={register} key={key} contactTitle={key}\r\n                        contactValue={profile.contacts[key]}/>)}\r\n                </div>\r\n                <div><button onClick={() => setIsEnabled(true)}><DoneIcon style={{width: \"15px\"}}/></button></div>\r\n            </form>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ProfileDataForm;","import React from 'react';\r\nimport s from '../ProfileInfo.module.css'\r\n\r\ntype PropsType = {\r\n    contactTitle: string\r\n    contactValue: string\r\n}\r\n\r\nconst Contact: React.FC<PropsType> = ({contactTitle, contactValue}) => {\r\n    return (\r\n        <div>\r\n            {contactValue ? <div className={s.contact}>\r\n                <b>{contactTitle}: </b>\r\n                <a href={contactValue}>{contactValue}</a>\r\n            </div> : null}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Contact;","import React from 'react';\r\nimport s from \"../ProfileInfo.module.css\";\r\nimport Contact from \"../Contact/Contact\";\r\nimport {ProfileType} from \"../../../../types/types\";\r\n\r\ntype PropsType = {\r\n    profile: ProfileType\r\n    isOwner: boolean\r\n}\r\n\r\nconst ProfileData: React.FC<PropsType> = ({profile, isOwner}) => {\r\n    return <>\r\n        {profile.aboutMe ? <div>\r\n            <b>About me: </b>\r\n            <span>{profile.aboutMe}</span>\r\n        </div> : null}\r\n        <div>\r\n            <b>Looking for a job: </b>\r\n            {profile.lookingForAJob ? 'Yes' : 'No'}\r\n        </div>\r\n        {profile.lookingForAJob ?\r\n            <div className={s.job}>\r\n                <b>Soft skills: </b>\r\n                {profile.lookingForAJob ? profile.lookingForAJobDescription : null}\r\n            </div> : null}\r\n        {(Object.keys(profile.contacts) as Array<keyof typeof profile.contacts>).map(key => <Contact key={key} contactTitle={key}\r\n                                                                                                      contactValue={profile.contacts[key]}/>)}\r\n        </>\r\n}\r\n\r\nexport default ProfileData;","import React, {useState} from 'react';\r\nimport s from './ProfileInfo.module.css'\r\nimport avatar from '../../../img/post_avatar_big.png'\r\nimport Preloader from \"../../Common/Preloader/Preloader\";\r\nimport ProfileStatus from \"./ProfileStatus/ProfileStatus\";\r\nimport ProfileDataForm from \"./ProfileDataForm/ProfileDataForm\";\r\nimport ProfileData from \"./ProfileData/ProfileData\";\r\nimport {ProfileType} from \"../../../types/types\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {getAmountOfFollowed, getProfileIsFetching} from \"../../../redux/selectors\";\r\nimport UploadIcon from '@mui/icons-material/Upload';\r\n\r\ntype PropsType = {\r\n    profile: ProfileType | null\r\n    status: string | null\r\n    updateStatus: (status: string | null) => void\r\n    isOwner: boolean\r\n    savePhoto: (photo: any) => void\r\n    saveProfileInfo: (info: ProfileType) => void\r\n}\r\n\r\nconst ProfileInfo: React.FC<PropsType> = ({profile, status, updateStatus, isOwner, savePhoto, saveProfileInfo}) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [isEnabled, setIsEnabled] = useState(true);\r\n    const isFetching = useSelector(getProfileIsFetching);\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const onAvatarSelected = (e: any) => {\r\n        if (e.target.files.length)\r\n            savePhoto(e.target.files[0]);\r\n    }\r\n    return (\r\n        <div className={s.profile_info}>\r\n            <div className={s.avatar}>\r\n                {isFetching ? <Preloader/> :\r\n                    <div className={s.image}>\r\n                        <img src={profile.photos.large !== null ? profile.photos.large : avatar} alt=\"\" />\r\n                        {isOwner ?\r\n                            <span className={s.fileUpload}>\r\n                            <input type=\"file\" onChange={onAvatarSelected} className={s.upload} id=\"file-input\"/>\r\n                            <label className={s.icon} htmlFor=\"file-input\">\r\n                                <UploadIcon/>\r\n                            </label>\r\n                        </span> : null}\r\n                    </div>}\r\n                <div className={s.buttons}>\r\n                    {isOwner ?\r\n                        <button disabled={!isEnabled} onClick={() => {\r\n                            setEditMode(true);\r\n                            setIsEnabled(false);\r\n                        }} className={isEnabled ? s.edit : s.edit_disabled}>Edit profile</button> : null}\r\n                </div>\r\n            </div>\r\n            <div className={editMode ? s.editing : s.info}>\r\n                <div className={s.upper}>\r\n                    <div className={s.name}>{profile.fullName}</div>\r\n                    <span className={s.status}><ProfileStatus status={status} updateStatus={updateStatus} isOwner={isOwner}/></span>\r\n                </div>\r\n                {editMode ?\r\n                    <ProfileDataForm profile={profile} setEditMode={setEditMode} setIsEnabled={setIsEnabled} saveProfileInfo={saveProfileInfo}/> :\r\n                    <ProfileData profile={profile} isOwner={isOwner}/>}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProfileInfo;","// extracted by mini-css-extract-plugin\nexport default {\"amount_wrapper_low\":\"Profile_amount_wrapper_low__t7Y2Y\",\"amount_wrapper_high\":\"Profile_amount_wrapper_high__7-ejX\",\"amount_string\":\"Profile_amount_string__CN6wF\",\"amount\":\"Profile_amount__VyaAZ\",\"upper\":\"Profile_upper__bkt+O\",\"followed_users_low\":\"Profile_followed_users_low__pEphI\",\"followed_users_high\":\"Profile_followed_users_high__Mk9Ug\",\"followed_user\":\"Profile_followed_user__tc+Rc\",\"followed_name\":\"Profile_followed_name__+MCbC\",\"followed_string\":\"Profile_followed_string__g0JIJ\",\"lower\":\"Profile_lower__meUyG\"};","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"MyPosts_form__AR2gf\",\"text\":\"MyPosts_text__2MS39\",\"posts\":\"MyPosts_posts__SmsFw\",\"newPost\":\"MyPosts_newPost__zAF6d\",\"posts_block\":\"MyPosts_posts_block__WYbPj\"};","// extracted by mini-css-extract-plugin\nexport default {\"post_wrapper\":\"Post_post_wrapper__P23VN\",\"first_post\":\"Post_first_post__0uYd5\",\"upper\":\"Post_upper__bsQs1\",\"writer_info\":\"Post_writer_info__EcQml\"};","import React from 'react';\r\nimport s from './Post.module.css'\r\nimport avatar from '../../../../img/post_avatar.png'\r\nimport {PostType} from \"../../../../types/types\";\r\n\r\ntype PropsType = {\r\n    postInfo: PostType\r\n    last: number\r\n}\r\n\r\nconst Post: React.FC<PropsType> = ({postInfo, last}) => {\r\n    return (\r\n        <div className={postInfo.id + 1 !== last ? s.post_wrapper : s.first_post}>\r\n            <div className={s.upper}>\r\n                <a href=\"\"><img src={postInfo.avatarUrl === null ? avatar : postInfo.avatarUrl} alt=\"\"/></a>\r\n                <div className={s.writer_info}>\r\n                    <div><a href=\"\">{postInfo.name}</a></div>\r\n                    <div>{postInfo.date}</div>\r\n                </div>\r\n            </div>\r\n            <div>{postInfo.message}</div>\r\n            <div>\r\n                <span>like count: {postInfo.likesCount}</span>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css'\r\nimport Post from \"./Post/Post\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getPosts} from \"../../../redux/selectors\";\r\nimport {actions} from \"../../../redux/profileReducer\";\r\nimport {AppDispatch} from \"../../../redux/store\";\r\n\r\nconst MyPosts: React.FC = () => {\r\n    const {register, handleSubmit, reset} = useForm();\r\n    const posts = useSelector(getPosts);\r\n    const dispatch: AppDispatch = useDispatch();\r\n    let postsElements = posts.map(p => <Post postInfo={p} key={p.id} last={posts.length}/>).reverse();\r\n\r\n    const onSubmit = (d: any) => {\r\n        dispatch(actions.addPost(d.post));\r\n        reset();\r\n    }\r\n\r\n    return (\r\n        <div className={s.posts_block}>\r\n            <form onSubmit={handleSubmit(onSubmit)} className={s.form}>\r\n                <div className={s.newPost}>\r\n                    <div>\r\n                        <input type=\"text\" placeholder=\"Type here...\" autoComplete=\"off\" {...register(\"post\", {required: true})}/>\r\n                    </div>\r\n                    <div>\r\n                        <button>Add post</button>\r\n                    </div>\r\n                </div>\r\n                <div className={s.text}>All posts</div>\r\n                <div className={s.posts}>\r\n                    {postsElements}\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {UserType} from \"../../../../types/types\";\r\nimport avatar from '../../../../img/post_avatar.png'\r\nimport s from '../../Profile.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\ntype PropsType = {\r\n    user: UserType;\r\n}\r\n\r\nconst FollowedUser: React.FC<PropsType> = ({user}) => {\r\n    let name = user.name;\r\n    if (user.name.length > 7) {\r\n        name = user.name.slice(0, 6) + \"...\";\r\n    }\r\n    return (\r\n        <div className={s.followed_user}>\r\n            <div className={s.followed_avatar}>\r\n                <NavLink to={'/profile/' + user.id}>\r\n                    <img src={user.photos.small !== null ? user.photos.small : avatar} alt=\"\"/>\r\n                </NavLink>\r\n            </div>\r\n            <div className={s.followed_name}>\r\n                <NavLink to={'/profile/' + user.id}>\r\n                    {name}\r\n                </NavLink>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FollowedUser;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport {ProfileType} from \"../../types/types\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {getAmountOfFollowed, getFollowedUsers} from \"../../redux/selectors\";\r\nimport s from './Profile.module.css'\r\nimport MyPosts from \"./MyPosts/MyPosts\";\r\nimport FollowedUser from \"./ProfileInfo/FollowedUser/FollowedUser\";\r\n\r\ntype PropsType = {\r\n    isOwner: boolean\r\n    profile: ProfileType | null\r\n    status: string\r\n    updateStatus: (status: string | null) => void\r\n    savePhoto: (photo: any) => void\r\n    saveProfileInfo: (info: ProfileType) => void\r\n}\r\n\r\nconst Profile: React.FC<PropsType> = (props) => {\r\n    const amountOfFollowed = useSelector(getAmountOfFollowed);\r\n    const followedUsers = useSelector(getFollowedUsers);\r\n    let usersToShow = [];\r\n    let indexes = [] as number[];\r\n    if (followedUsers.length > 6) {\r\n        for (let i = 0; i < 6; i++) {\r\n            let index = Math.floor(Math.random() * followedUsers.length);\r\n            while (indexes.includes(index)) {\r\n                index = Math.floor(Math.random() * followedUsers.length);\r\n            }\r\n            indexes.push(index);\r\n            usersToShow.push(followedUsers[index]);\r\n        }\r\n    } else {\r\n        followedUsers.map(u => usersToShow.push(u));\r\n    }\r\n    return (\r\n        <div>\r\n            <ProfileInfo isOwner={props.isOwner} profile={props.profile} status={props.status}\r\n                         updateStatus={props.updateStatus} savePhoto={props.savePhoto}\r\n                         saveProfileInfo={props.saveProfileInfo}/>\r\n            {props.isOwner ? <div className={s.lower}>\r\n                <div className={usersToShow.length < 4 ? s.amount_wrapper_low : s.amount_wrapper_high}>\r\n                    <div className={s.amount_string}>\r\n                        <div className={s.upper}>\r\n                            <span className={s.followed_string}>Followed </span>\r\n                            <span className={s.amount}>{amountOfFollowed}</span>\r\n                        </div>\r\n                        <div className={usersToShow.length < 4 ? s.followed_users_low : s.followed_users_high}>\r\n                            {usersToShow.map(u => <FollowedUser key={u.id} user={u}/>)}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <MyPosts/>\r\n            </div> : null}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profile;","import {useParams} from \"react-router-dom\";\r\nimport React from \"react\";\r\n\r\nconst withRouter = (Children: any) => {\r\n    return (props: any) => {\r\n        const match  = {params: useParams()};\r\n        return <Children {...props}  match={match}/>\r\n    }\r\n}\r\n\r\nexport default withRouter;","import React, {useEffect} from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getProfile, getStatus, savePhoto, saveProfileInfo, updateStatus} from \"../../redux/profileReducer\";\r\nimport withAuthRedirect from \"../HOC/withAuthRedirect\";\r\nimport {compose} from \"@reduxjs/toolkit\";\r\nimport withRouter from \"../Common/withRouter/withRouter\";\r\nimport {AppStateType} from \"../../redux/store\";\r\nimport {ProfileType} from \"../../types/types\";\r\n\r\ntype PropsType = MapStatePropsType & MapDispatchToProps;\r\n\r\ntype MapStatePropsType = ReturnType<typeof mapStateToProps>;\r\n\r\ntype MapDispatchToProps = {\r\n    getProfile: (userID: number) => void\r\n    getStatus: (userID: number) => void\r\n    updateStatus: (status: string | null) => void\r\n    savePhoto: (photo: File) => void\r\n    saveProfileInfo: (info: ProfileType) => void\r\n}\r\n\r\nclass ProfileContainer extends React.Component<PropsType> {\r\n    refreshProfile() {\r\n        // @ts-ignore\r\n        let userID = this.props.match.params.userID;\r\n        if (!userID)\r\n            userID = this.props.authorizedUserID;\r\n        this.props.getProfile(userID);\r\n        this.props.getStatus(userID);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps: PropsType, prevState: PropsType) {\r\n        //@ts-ignore\r\n        if (this.props.match.params.userID !== prevProps.match.params.userID)\r\n            this.refreshProfile();\r\n    }\r\n\r\n    render() {\r\n        return <Profile {...this.props} profile={this.props.profile} status={this.props.status}\r\n                        updateStatus={this.props.updateStatus}\r\n                        //@ts-ignore\r\n                        isOwner={!this.props.match.params.userID}\r\n                        savePhoto={this.props.savePhoto}\r\n                        saveProfileInfo={this.props.saveProfileInfo}\r\n        />\r\n    }\r\n}\r\n\r\n// const ProfileContainer: React.FC<PropsType> = (props) => {\r\n//     const {userID} = useParams();\r\n//     const refreshProfile = () => {\r\n//         console.log(userID)\r\n//         if (!userID) {\r\n//             const myID = 27510;  //27094\r\n//             props.getProfile(myID);\r\n//             props.getStatus(myID);\r\n//         } else {\r\n//             props.getProfile(+userID);\r\n//             props.getStatus(+userID);\r\n//         }\r\n//     }\r\n//\r\n//     useEffect(() => {\r\n//         refreshProfile();\r\n//     }, []);\r\n//\r\n//     useEffect(() => {\r\n//         // if (props.match.params.userID !== prevProps.match.params.userID)\r\n//             refreshProfile();\r\n//     });\r\n//\r\n//\r\n//     return (\r\n//         <Profile {...props} profile={props.profile} status={props.status}\r\n//                  updateStatus={props.updateStatus}\r\n//                  isOwner={!userID}\r\n//                  savePhoto={props.savePhoto}\r\n//                  saveProfileInfo={props.saveProfileInfo}\r\n//         />)\r\n// }\r\n\r\nconst mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authorizedUserID: state.auth.userID\r\n    }\r\n}\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, {getProfile, getStatus, updateStatus, savePhoto, saveProfileInfo}),\r\n    withRouter,\r\n    withAuthRedirect)(ProfileContainer);","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M9 16.2 4.8 12l-1.4 1.4L9 19 21 7l-1.4-1.4L9 16.2z\"\n}), 'Done');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M5 20h14v-2H5v2zm0-10h4v6h6v-6h4l-7-7-7 7z\"\n}), 'Upload');\nexports.default = _default;"],"names":["props","useState","editMode","setEditMode","status","setStatus","useEffect","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","onDoubleClick","isOwner","contactTitle","contactValue","register","className","s","type","defaultValue","required","profile","setIsEnabled","saveProfileInfo","useForm","handleSubmit","onSubmit","d","fullName","then","Object","keys","contacts","map","key","aboutMe","placeholder","defaultChecked","lookingForAJob","lookingForAJobDescription","onClick","Done","style","width","href","savePhoto","isEnabled","isFetching","useSelector","getProfileIsFetching","Preloader","src","photos","large","avatar","alt","target","files","length","id","htmlFor","Upload","disabled","postInfo","last","avatarUrl","name","date","message","likesCount","reset","posts","getPosts","dispatch","useDispatch","postsElements","p","reverse","actions","post","autoComplete","user","slice","to","small","amountOfFollowed","getAmountOfFollowed","followedUsers","getFollowedUsers","usersToShow","indexes","i","index","Math","floor","random","includes","push","u","Children","match","params","useParams","ProfileContainer","userID","this","authorizedUserID","getProfile","getStatus","refreshProfile","prevProps","prevState","React","compose","connect","state","profilePage","auth","withRouter","withAuthRedirect","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx"],"sourceRoot":""}