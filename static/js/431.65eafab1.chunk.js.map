{"version":3,"file":"static/js/431.65eafab1.chunk.js","mappings":"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","sources":["webpack://react-kabzda-1/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatus/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ContactForm/ContactForm.jsx","components/Profile/ProfileInfo/ProfileDataForm/ProfileDataForm.jsx","components/Profile/ProfileInfo/Contact/Contact.jsx","components/Profile/ProfileInfo/ProfileData/ProfileData.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://react-kabzda-1/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://react-kabzda-1/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"profile_info\":\"ProfileInfo_profile_info__H3D-z\",\"avatar\":\"ProfileInfo_avatar__OJq4I\",\"info\":\"ProfileInfo_info__blXPI\",\"name\":\"ProfileInfo_name__adacu\",\"about\":\"ProfileInfo_about__pyyvZ\",\"job\":\"ProfileInfo_job__S9tI2\"};","import React, {useEffect, useState} from 'react';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        props.isOwner ? setEditMode(true) : null;\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode ? (\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode}>{!props.status ? \"No status\" : props.status}</span>\r\n                </div>\r\n            ) : (\r\n                <div>\r\n                    <input onChange={onStatusChange} autoFocus={true} value={status.toString()} onBlur={deactivateEditMode}/>\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\n\r\nconst ContactForm = ({contactTitle, contactValue, register}) => {\r\n    return (\r\n        <div>\r\n            <b>{contactTitle}: </b>\r\n            <input type=\"text\" defaultValue={contactValue} {...register(\"contacts.\" + contactTitle, {required: false})}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ContactForm;","import React from 'react';\r\nimport {useForm} from \"react-hook-form\";\r\nimport s from \"../ProfileInfo.module.css\";\r\nimport ContactForm from \"../ContactForm/ContactForm\";\r\n\r\nconst ProfileDataForm = ({profile, setEditMode, saveProfileInfo}) => {\r\n    const {register, handleSubmit} = useForm();\r\n    const onSubmit = (d) => {\r\n        d[\"fullName\"] = profile.fullName;\r\n        saveProfileInfo(d)\r\n            .then(() => setEditMode(false));\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n                <div className={s.about}>\r\n                    <b>About me: </b>\r\n                    <input type=\"text\" {...register(\"aboutMe\", {required: false})}\r\n                           defaultValue={profile.aboutMe}\r\n                           onBlur={() => {\r\n                           }} placeholder={'About Me'}/>\r\n                </div>\r\n                <div>\r\n                    <b>Looking for a job: </b>\r\n                    <input type=\"checkbox\" defaultChecked={profile.lookingForAJob} {...register(\"lookingForAJob\", {required: false})}/>\r\n                </div>\r\n                <div className={s.job}>\r\n                    <b>Soft skills: </b>\r\n                    <input type=\"text\" {...register(\"lookingForAJobDescription\", {required: false})}\r\n                           defaultValue={profile.lookingForAJobDescription}\r\n                           onBlur={() => {\r\n                           }} placeholder={'Soft skills'}/>\r\n                </div>\r\n                {Object.keys(profile.contacts).map(key => <ContactForm register={register} key={key} contactTitle={key}\r\n                                                                   contactValue={profile.contacts[key]}/>)}\r\n                <button>Done</button>\r\n            </form>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ProfileDataForm;","import React from 'react';\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return (\r\n        <div>\r\n            {contactValue ? <div>\r\n                <b>{contactTitle}: </b>\r\n                <a href={contactValue}>{contactValue}</a>\r\n            </div> : null}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Contact;","import React from 'react';\r\nimport s from \"../ProfileInfo.module.css\";\r\nimport Contact from \"../Contact/Contact\";\r\n\r\nconst ProfileData = ({profile, isOwner, goToEditMode}) => {\r\n    return <>\r\n        {isOwner ? <button onClick={goToEditMode}>edit</button> : null}\r\n        {profile.aboutMe ? <div>\r\n            <b>About me: </b>\r\n            <span className={s.about}>{profile.aboutMe}</span>\r\n        </div> : null}\r\n        <div>\r\n            <b>Looking for a job: </b>\r\n            {profile.lookingForAJob ? 'Yes' : 'No'}\r\n        </div>\r\n        {profile.lookingForAJob ?\r\n            <div className={s.job}>\r\n                <b>Soft skills: </b>\r\n                {profile.lookingForAJob ? profile.lookingForAJobDescription : null}\r\n            </div> : null}\r\n        {Object.keys(profile.contacts).map(key => <Contact key={key} contactTitle={key}\r\n                                                           contactValue={profile.contacts[key]}/>)}\r\n    </>\r\n}\r\n\r\nexport default ProfileData;","import React, {useState} from 'react';\r\nimport s from './ProfileInfo.module.css'\r\nimport avatar from '../../../img/user_avatar.jpg'\r\nimport Preloader from \"../../Common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatus/ProfileStatusWithHooks\";\r\nimport ProfileDataForm from \"./ProfileDataForm/ProfileDataForm\";\r\nimport ProfileData from \"./ProfileData/ProfileData\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, savePhoto, saveProfileInfo}) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const onAvatarSelected = (e) => {\r\n        if (e.target.files.length)\r\n            savePhoto(e.target.files[0]);\r\n    }\r\n\r\n    return (\r\n        <div className={s.profile_info}>\r\n            <div className={s.avatar}>\r\n                <img src={profile.photos.large != null ? profile.photos.large : avatar} alt=\"\"/>\r\n                <div>\r\n                    {isOwner ? <input type=\"file\" onChange={onAvatarSelected}/> : null}\r\n                </div>\r\n            </div>\r\n            <div className={s.info}>\r\n                <div className={s.name}>{profile.fullName}</div>\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus} isOwner={isOwner}/>\r\n                {editMode ? <ProfileDataForm profile={profile} setEditMode={setEditMode} saveProfileInfo={saveProfileInfo}/> :\r\n                    <ProfileData profile={profile} isOwner={isOwner} goToEditMode={() => setEditMode(true)}/>}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProfileInfo;","// extracted by mini-css-extract-plugin\nexport default {\"text\":\"MyPosts_text__-+Ipi\",\"newPost\":\"MyPosts_newPost__B4LFh\",\"postsBlock\":\"MyPosts_postsBlock__2WPjJ\",\"posts\":\"MyPosts_posts__ct9Vp\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__qURPC\"};","import React from 'react';\r\nimport s from './Post.module.css'\r\nimport avatar from '../../../../img/post_avatar.png'\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div>\r\n            <div className={s.item}>\r\n                <img src={avatar} alt=\"\"/>\r\n                {props.message}\r\n                <div>\r\n                    <span>like count: {props.likes}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css'\r\nimport Post from \"./Post/Post\";\r\nimport {useForm} from \"react-hook-form\";\r\n\r\nconst MyPosts = ({posts, addPost}) => {\r\n    const {register, handleSubmit, reset} = useForm();\r\n    let postsElements = posts.map(p => <Post message={p.message} likes={p.likesCount} key={p.id}/>)\r\n\r\n    const onSubmit = (d) => {\r\n        addPost(d.post);\r\n        reset();\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3 className={s.text}>My posts</h3>\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n                <div className={s.newPost}>\r\n                    <div>\r\n                        <textarea {...register(\"post\", {required: true})}></textarea>\r\n                    </div>\r\n                    <div>\r\n                        <button>Add post</button>\r\n                    </div>\r\n                </div>\r\n                <div className={s.posts}>\r\n                    {postsElements}\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPost} from \"../../../redux/profileReducer.ts\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {dispatch(addPost(newPostText))}\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport s from './Profile.module.css'\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo isOwner={props.isOwner} profile={props.profile} status={props.status}\r\n                         updateStatus={props.updateStatus} savePhoto={props.savePhoto}\r\n                         saveProfileInfo={props.saveProfileInfo}/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getProfile, getStatus, savePhoto, saveProfileInfo, updateStatus} from \"../../redux/profileReducer.ts\";\r\nimport withAuthRedirect from \"../HOC/withAuthRedirect\";\r\nimport {compose} from \"@reduxjs/toolkit\";\r\nimport withRouter from \"../../utils/withRouter\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n    refreshProfile() {\r\n        let userID = this.props.match.params.userID;\r\n        if (!userID)\r\n            userID = 27510;  //27094\r\n        this.props.getProfile(userID);\r\n        this.props.getStatus(userID);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userID !== prevProps.match.params.userID)\r\n            this.refreshProfile();\r\n    }\r\n\r\n    render() {\r\n        return <Profile {...this.props} profile={this.props.profile} status={this.props.status}\r\n                        updateStatus={this.props.updateStatus}\r\n                        isOwner={!this.props.match.params.userID}\r\n                        savePhoto={this.props.savePhoto}\r\n                        saveProfileInfo={this.props.saveProfileInfo}\r\n        />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getProfile, getStatus, updateStatus, savePhoto, saveProfileInfo}),\r\n    withRouter,\r\n    withAuthRedirect)(ProfileContainer);"],"names":["props","useState","editMode","setEditMode","status","setStatus","useEffect","onChange","e","currentTarget","value","autoFocus","toString","onBlur","updateStatus","onDoubleClick","isOwner","contactTitle","contactValue","register","type","defaultValue","required","profile","saveProfileInfo","useForm","handleSubmit","onSubmit","d","fullName","then","className","s","aboutMe","placeholder","defaultChecked","lookingForAJob","lookingForAJobDescription","Object","keys","contacts","map","key","href","goToEditMode","onClick","savePhoto","Preloader","src","photos","large","avatar","alt","target","files","length","message","likes","posts","addPost","reset","postsElements","p","likesCount","id","post","connect","state","profilePage","newPostText","dispatch","MyPosts","ProfileContainer","userID","this","match","params","getProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","React","compose","withRouter","withAuthRedirect"],"sourceRoot":""}