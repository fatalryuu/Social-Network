{"version":3,"file":"static/js/549.689174a9.chunk.js","mappings":"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","sources":["webpack://react-kabzda-1/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatus/ProfileStatus.tsx","components/Profile/ProfileInfo/ContactForm/ContactForm.tsx","components/Profile/ProfileInfo/ProfileDataForm/ProfileDataForm.tsx","components/Profile/ProfileInfo/Contact/Contact.tsx","components/Profile/ProfileInfo/ProfileData/ProfileData.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","webpack://react-kabzda-1/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://react-kabzda-1/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/Profile.tsx","components/Common/withRouter/withRouter.tsx","components/Profile/ProfileContainer.tsx","../node_modules/@mui/icons-material/Upload.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"profile_info\":\"ProfileInfo_profile_info__NakLG\",\"avatar\":\"ProfileInfo_avatar__v3lLj\",\"buttons\":\"ProfileInfo_buttons__siaCO\",\"edit\":\"ProfileInfo_edit__m8BFh\",\"fileUpload\":\"ProfileInfo_fileUpload__-oFCM\",\"upload\":\"ProfileInfo_upload__N-5kY\",\"icon\":\"ProfileInfo_icon__vGOUM\",\"info\":\"ProfileInfo_info__miP9O\",\"name\":\"ProfileInfo_name__3FB6v\",\"about\":\"ProfileInfo_about__Q+iRk\",\"job\":\"ProfileInfo_job__M-5+1\"};","import React, {useEffect, useState} from 'react';\r\n\r\ntype PropsType = {\r\n    status: string | null\r\n    updateStatus: (status: string | null) => void\r\n    isOwner: boolean\r\n}\r\n\r\nconst ProfileStatus: React.FC<PropsType> = (props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        props.isOwner ? setEditMode(true) : null;\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode ? (\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode}>{!props.status ? \"No status\" : props.status}</span>\r\n                </div>\r\n            ) : (\r\n                <div>\r\n                    <input onChange={onStatusChange} autoFocus={true} value={status ? status : \"\"} onBlur={deactivateEditMode}/>\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatus;","import React from 'react';\r\n\r\ntype PropsType = {\r\n    contactTitle: string\r\n    contactValue: string\r\n    register: any\r\n}\r\n\r\nconst ContactForm: React.FC<PropsType> = ({contactTitle, contactValue, register}) => {\r\n    return (\r\n        <div>\r\n            <b>{contactTitle}: </b>\r\n            <input type=\"text\" defaultValue={contactValue} {...register(\"contacts.\" + contactTitle, {required: false})}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ContactForm;","import React from 'react';\r\nimport {useForm} from \"react-hook-form\";\r\nimport s from \"../ProfileInfo.module.css\";\r\nimport ContactForm from \"../ContactForm/ContactForm\";\r\nimport {ProfileType} from \"../../../../types/types\";\r\n\r\ntype PropsType = {\r\n    profile: ProfileType\r\n    setEditMode: (editMode: boolean) => void\r\n    saveProfileInfo: (info: ProfileType) => any\r\n}\r\n\r\nconst ProfileDataForm: React.FC<PropsType> = ({profile, setEditMode, saveProfileInfo}) => {\r\n    const {register, handleSubmit} = useForm();\r\n    const onSubmit = (d: any) => {\r\n        if (profile)\r\n            d[\"fullName\"] = profile.fullName;\r\n            saveProfileInfo(d)\r\n                .then(() => setEditMode(false));\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n                <div className={s.about}>\r\n                    <b>About me: </b>\r\n                    <input type=\"text\" {...register(\"aboutMe\", {required: false})}\r\n                           defaultValue={profile.aboutMe}\r\n                           onBlur={() => {\r\n                           }} placeholder={'About Me'}/>\r\n                </div>\r\n                <div>\r\n                    <b>Looking for a job: </b>\r\n                    <input type=\"checkbox\" defaultChecked={profile.lookingForAJob} {...register(\"lookingForAJob\", {required: false})}/>\r\n                </div>\r\n                <div className={s.job}>\r\n                    <b>Soft skills: </b>\r\n                    <input type=\"text\" {...register(\"lookingForAJobDescription\", {required: false})}\r\n                           defaultValue={profile.lookingForAJobDescription}\r\n                           onBlur={() => {\r\n                           }} placeholder={'Soft skills'}/>\r\n                </div>\r\n                {(Object.keys(profile.contacts) as Array<keyof typeof profile.contacts>).map(key => <ContactForm register={register} key={key} contactTitle={key}\r\n                                                                   contactValue={profile.contacts[key]}/>)}\r\n                <button>Done</button>\r\n            </form>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ProfileDataForm;","import React from 'react';\r\n\r\ntype PropsType = {\r\n    contactTitle: string\r\n    contactValue: string\r\n}\r\n\r\nconst Contact: React.FC<PropsType> = ({contactTitle, contactValue}) => {\r\n    return (\r\n        <div>\r\n            {contactValue ? <div>\r\n                <b>{contactTitle}: </b>\r\n                <a href={contactValue}>{contactValue}</a>\r\n            </div> : null}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Contact;","import React from 'react';\r\nimport s from \"../ProfileInfo.module.css\";\r\nimport Contact from \"../Contact/Contact\";\r\nimport {ProfileType} from \"../../../../types/types\";\r\n\r\ntype PropsType = {\r\n    profile: ProfileType\r\n    isOwner: boolean\r\n}\r\n\r\nconst ProfileData: React.FC<PropsType> = ({profile, isOwner}) => {\r\n    return <>\r\n        {profile.aboutMe ? <div>\r\n            <b>About me: </b>\r\n            <span className={s.about}>{profile.aboutMe}</span>\r\n        </div> : null}\r\n        <div>\r\n            <b>Looking for a job: </b>\r\n            {profile.lookingForAJob ? 'Yes' : 'No'}\r\n        </div>\r\n        {profile.lookingForAJob ?\r\n            <div className={s.job}>\r\n                <b>Soft skills: </b>\r\n                {profile.lookingForAJob ? profile.lookingForAJobDescription : null}\r\n            </div> : null}\r\n        {(Object.keys(profile.contacts) as Array<keyof typeof profile.contacts>).map(key => <Contact key={key} contactTitle={key}\r\n                                                                                                      contactValue={profile.contacts[key]}/>)}\r\n        </>\r\n}\r\n\r\nexport default ProfileData;","import React, {useState} from 'react';\r\nimport s from './ProfileInfo.module.css'\r\nimport avatar from '../../../img/user_avatar.jpg'\r\nimport Preloader from \"../../Common/Preloader/Preloader\";\r\nimport ProfileStatus from \"./ProfileStatus/ProfileStatus\";\r\nimport ProfileDataForm from \"./ProfileDataForm/ProfileDataForm\";\r\nimport ProfileData from \"./ProfileData/ProfileData\";\r\nimport {ProfileType} from \"../../../types/types\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {getProfileIsFetching} from \"../../../redux/usersSelectors\";\r\nimport UploadIcon from '@mui/icons-material/Upload';\r\n\r\ntype PropsType = {\r\n    profile: ProfileType | null\r\n    status: string | null\r\n    updateStatus: (status: string | null) => void\r\n    isOwner: boolean\r\n    savePhoto: (photo: any) => void\r\n    saveProfileInfo: (info: ProfileType) => void\r\n}\r\n\r\nconst ProfileInfo: React.FC<PropsType> = ({profile, status, updateStatus, isOwner, savePhoto, saveProfileInfo}) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    const isFetching = useSelector(getProfileIsFetching);\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const onAvatarSelected = (e: any) => {\r\n        if (e.target.files.length)\r\n            savePhoto(e.target.files[0]);\r\n    }\r\n\r\n    return (\r\n        <div className={s.profile_info}>\r\n            <div className={s.avatar}>\r\n                {isFetching ? <Preloader/> :\r\n                    <img src={profile.photos.large !== undefined ? profile.photos.large : avatar} alt=\"\"/>}\r\n                <div className={s.buttons}>\r\n                    {isOwner ?\r\n                        <button onClick={() => setEditMode(true)} className={s.edit}>Edit profile</button> : null}\r\n                    {isOwner ?\r\n                        <span className={s.fileUpload}>\r\n                            <input type=\"file\" onChange={onAvatarSelected} className={s.upload} id=\"file-input\"/>\r\n                            <label className={s.icon} htmlFor=\"file-input\">\r\n                                <UploadIcon/>\r\n                            </label>\r\n                        </span> : null}\r\n                </div>\r\n            </div>\r\n            <div className={s.info}>\r\n                <div className={s.name}>{profile.fullName}</div>\r\n                <ProfileStatus status={status} updateStatus={updateStatus} isOwner={isOwner}/>\r\n                {editMode ?\r\n                    <ProfileDataForm profile={profile} setEditMode={setEditMode} saveProfileInfo={saveProfileInfo}/> :\r\n                    <ProfileData profile={profile} isOwner={isOwner}/>}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProfileInfo;","// extracted by mini-css-extract-plugin\nexport default {\"text\":\"MyPosts_text__2MS39\",\"newPost\":\"MyPosts_newPost__zAF6d\",\"postsBlock\":\"MyPosts_postsBlock__drxLI\",\"posts\":\"MyPosts_posts__SmsFw\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__wi-3r\"};","import React from 'react';\r\nimport s from './Post.module.css'\r\nimport avatar from '../../../../img/post_avatar.png'\r\n\r\ntype PropsType = {\r\n    message: string\r\n    likes: number\r\n}\r\n\r\nconst Post: React.FC<PropsType> = (props) => {\r\n    return (\r\n        <div>\r\n            <div className={s.item}>\r\n                <img src={avatar} alt=\"\"/>\r\n                {props.message}\r\n                <div>\r\n                    <span>like count: {props.likes}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css'\r\nimport Post from \"./Post/Post\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport {PostType} from \"../../../types/types\";\r\n\r\ntype PropsType = {\r\n    posts: Array<PostType>\r\n    addPost: (newPostText: string) => void\r\n}\r\n\r\nconst MyPosts: React.FC<PropsType> = ({posts, addPost}) => {\r\n    const {register, handleSubmit, reset} = useForm();\r\n    let postsElements = posts.map(p => <Post message={p.message} likes={p.likesCount} key={p.id}/>)\r\n\r\n    const onSubmit = (d: any) => {\r\n        addPost(d.post);\r\n        reset();\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3 className={s.text}>My posts</h3>\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n                <div className={s.newPost}>\r\n                    <div>\r\n                        <textarea {...register(\"post\", {required: true})}></textarea>\r\n                    </div>\r\n                    <div>\r\n                        <button>Add post</button>\r\n                    </div>\r\n                </div>\r\n                <div className={s.posts}>\r\n                    {postsElements}\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {actions} from \"../../../redux/profileReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../../redux/store\";\r\nimport {PostType} from \"../../../types/types\";\r\n\r\ntype MapStatePropsType = {\r\n    posts: Array<PostType>\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    addPost: (newPostText: string) => void\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect<MapStatePropsType, MapDispatchPropsType, {}, AppStateType>(mapStateToProps, {addPost: actions.addPost})(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport {ProfileType} from \"../../types/types\";\r\n\r\ntype PropsType = {\r\n    isOwner: boolean\r\n    profile: ProfileType | null\r\n    status: string\r\n    updateStatus: (status: string | null) => void\r\n    savePhoto: (photo: any) => void\r\n    saveProfileInfo: (info: ProfileType) => void\r\n}\r\n\r\nconst Profile: React.FC<PropsType> = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo isOwner={props.isOwner} profile={props.profile} status={props.status}\r\n                         updateStatus={props.updateStatus} savePhoto={props.savePhoto}\r\n                         saveProfileInfo={props.saveProfileInfo}/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profile;","import {useParams} from \"react-router-dom\";\r\nimport React from \"react\";\r\n\r\nconst withRouter = (Children: any) => {\r\n    return (props: any) => {\r\n        const match  = {params: useParams()};\r\n        return <Children {...props}  match={match}/>\r\n    }\r\n}\r\n\r\nexport default withRouter;","import React, {useEffect} from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getProfile, getStatus, savePhoto, saveProfileInfo, updateStatus} from \"../../redux/profileReducer\";\r\nimport withAuthRedirect from \"../HOC/withAuthRedirect\";\r\nimport {compose} from \"@reduxjs/toolkit\";\r\nimport withRouter from \"../Common/withRouter/withRouter\";\r\nimport {AppStateType} from \"../../redux/store\";\r\nimport {ProfileType} from \"../../types/types\";\r\n\r\ntype PropsType = MapStatePropsType & MapDispatchToProps;\r\n\r\ntype MapStatePropsType = ReturnType<typeof mapStateToProps>;\r\n\r\ntype MapDispatchToProps = {\r\n    getProfile: (userID: number) => void\r\n    getStatus: (userID: number) => void\r\n    updateStatus: (status: string | null) => void\r\n    savePhoto: (photo: File) => void\r\n    saveProfileInfo: (info: ProfileType) => void\r\n}\r\n\r\nclass ProfileContainer extends React.Component<PropsType> {\r\n    refreshProfile() {\r\n        // @ts-ignore\r\n        let userID = this.props.match.params.userID;\r\n        if (!userID)\r\n            userID = this.props.authorizedUserID;\r\n        this.props.getProfile(userID);\r\n        this.props.getStatus(userID);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps: PropsType, prevState: PropsType) {\r\n        //@ts-ignore\r\n        if (this.props.match.params.userID !== prevProps.match.params.userID)\r\n            this.refreshProfile();\r\n    }\r\n\r\n    render() {\r\n        return <Profile {...this.props} profile={this.props.profile} status={this.props.status}\r\n                        updateStatus={this.props.updateStatus}\r\n                        //@ts-ignore\r\n                        isOwner={!this.props.match.params.userID}\r\n                        savePhoto={this.props.savePhoto}\r\n                        saveProfileInfo={this.props.saveProfileInfo}\r\n        />\r\n    }\r\n}\r\n\r\n// const ProfileContainer: React.FC<PropsType> = (props) => {\r\n//     const {userID} = useParams();\r\n//     const refreshProfile = () => {\r\n//         console.log(userID)\r\n//         if (!userID) {\r\n//             const myID = 27510;  //27094\r\n//             props.getProfile(myID);\r\n//             props.getStatus(myID);\r\n//         } else {\r\n//             props.getProfile(+userID);\r\n//             props.getStatus(+userID);\r\n//         }\r\n//     }\r\n//\r\n//     useEffect(() => {\r\n//         refreshProfile();\r\n//     }, []);\r\n//\r\n//     useEffect(() => {\r\n//         // if (props.match.params.userID !== prevProps.match.params.userID)\r\n//             refreshProfile();\r\n//     });\r\n//\r\n//\r\n//     return (\r\n//         <Profile {...props} profile={props.profile} status={props.status}\r\n//                  updateStatus={props.updateStatus}\r\n//                  isOwner={!userID}\r\n//                  savePhoto={props.savePhoto}\r\n//                  saveProfileInfo={props.saveProfileInfo}\r\n//         />)\r\n// }\r\n\r\nconst mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authorizedUserID: state.auth.userID\r\n    }\r\n}\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, {getProfile, getStatus, updateStatus, savePhoto, saveProfileInfo}),\r\n    withRouter,\r\n    withAuthRedirect)(ProfileContainer);","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M5 20h14v-2H5v2zm0-10h4v6h6v-6h4l-7-7-7 7z\"\n}), 'Upload');\nexports.default = _default;"],"names":["props","useState","editMode","setEditMode","status","setStatus","useEffect","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","onDoubleClick","isOwner","contactTitle","contactValue","register","type","defaultValue","required","profile","saveProfileInfo","useForm","handleSubmit","onSubmit","d","fullName","then","className","s","aboutMe","placeholder","defaultChecked","lookingForAJob","lookingForAJobDescription","Object","keys","contacts","map","key","href","savePhoto","isFetching","useSelector","getProfileIsFetching","Preloader","src","undefined","photos","large","alt","onClick","target","files","length","id","htmlFor","Upload","avatar","message","likes","posts","addPost","reset","postsElements","p","likesCount","post","connect","state","profilePage","actions","MyPosts","Children","match","params","useParams","ProfileContainer","userID","this","authorizedUserID","getProfile","getStatus","refreshProfile","prevProps","prevState","React","compose","auth","withRouter","withAuthRedirect","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx"],"sourceRoot":""}