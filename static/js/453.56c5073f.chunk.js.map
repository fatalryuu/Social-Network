{"version":3,"file":"static/js/453.56c5073f.chunk.js","mappings":"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","sources":["webpack://react-kabzda-1/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatus/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://react-kabzda-1/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://react-kabzda-1/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"profile_info\":\"ProfileInfo_profile_info__H3D-z\",\"avatar\":\"ProfileInfo_avatar__OJq4I\",\"info\":\"ProfileInfo_info__blXPI\",\"name\":\"ProfileInfo_name__adacu\",\"about\":\"ProfileInfo_about__pyyvZ\",\"job\":\"ProfileInfo_job__S9tI2\"};","import React, {useEffect, useState} from 'react';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode ? (\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode}>{!props.status ? \"No status\" : props.status}</span>\r\n                </div>\r\n            ) : (\r\n                <div>\r\n                    <input onChange={onStatusChange} autoFocus={true} value={status.toString()} onBlur={deactivateEditMode}/>\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport s from './ProfileInfo.module.css'\r\nimport avatar from '../../../img/profile_avatar.jpg'\r\nimport Preloader from \"../../Common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatus/ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n    if (!profile) {\r\n        return <Preloader />\r\n    }\r\n    return (\r\n        <div className={s.profile_info}>\r\n            <div className={s.avatar}>\r\n                <img src={profile.photos.large != null ? profile.photos.large : avatar} alt=\"\"/>\r\n            </div>\r\n            <div className={s.info}>\r\n                <div className={s.name}>{profile.fullName}</div>\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n                <div className={s.about}>{profile.aboutMe}</div>\r\n                {profile.lookingForAJob ? <div className={s.job}>{profile.lookingForAJobDescription}</div> : null}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProfileInfo;","// extracted by mini-css-extract-plugin\nexport default {\"text\":\"MyPosts_text__-+Ipi\",\"newPost\":\"MyPosts_newPost__B4LFh\",\"postsBlock\":\"MyPosts_postsBlock__2WPjJ\",\"posts\":\"MyPosts_posts__ct9Vp\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__qURPC\"};","import React from 'react';\r\nimport s from './Post.module.css'\r\nimport avatar from '../../../../img/post_avatar.png'\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div>\r\n            <div className={s.item}>\r\n                <img src={avatar} alt=\"\"/>\r\n                {props.message}\r\n                <div>\r\n                    <span>like count: {props.likes}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css'\r\nimport Post from \"./Post/Post\";\r\nimport {useForm} from \"react-hook-form\";\r\n\r\nconst MyPosts = ({posts, addPost}) => {\r\n    const {register, handleSubmit} = useForm();\r\n    let postsElements = posts.map(p => <Post message={p.message} likes={p.likesCount} key={p.id}/>)\r\n\r\n    const onSubmit = (d) => {\r\n        addPost(d.post);\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3 className={s.text}>My posts</h3>\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n                <div className={s.newPost}>\r\n                    <div>\r\n                        <textarea {...register(\"post\", {required: true})}></textarea>\r\n                    </div>\r\n                    <div>\r\n                        <button>Add post</button>\r\n                    </div>\r\n                </div>\r\n                <div className={s.posts}>\r\n                    {postsElements}\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPostActionCreator} from \"../../../redux/profileReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {dispatch(addPostActionCreator(newPostText))}\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport s from './Profile.module.css'\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getProfile, getStatus, updateStatus} from \"../../redux/profileReducer\";\r\nimport withAuthRedirect from \"../HOC/withAuthRedirect\";\r\nimport {compose} from \"@reduxjs/toolkit\";\r\nimport withRouter from \"../../withRouter\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {\r\n        let userID = this.props.match.params.userID;\r\n        if (!userID)\r\n            userID = 27094;\r\n        this.props.getProfile(userID);\r\n        this.props.getStatus(userID);\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.isMain !== prevProps.isMain) {\r\n            if (this.props.isMain) {\r\n                this.componentDidMount();\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <Profile {...this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus}/>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getProfile, getStatus, updateStatus}),\r\n    withRouter,\r\n    withAuthRedirect)(ProfileContainer);"],"names":["props","useState","editMode","setEditMode","status","setStatus","useEffect","onChange","e","currentTarget","value","autoFocus","toString","onBlur","updateStatus","onDoubleClick","profile","className","s","src","photos","large","avatar","alt","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","Preloader","message","likes","posts","addPost","useForm","register","handleSubmit","postsElements","map","p","likesCount","id","onSubmit","d","post","required","connect","state","profilePage","newPostText","dispatch","addPostActionCreator","MyPosts","ProfileContainer","userID","this","match","params","getProfile","getStatus","prevProps","isMain","componentDidMount","React","compose","withRouter","withAuthRedirect"],"sourceRoot":""}