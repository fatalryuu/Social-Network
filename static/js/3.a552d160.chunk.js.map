{"version":3,"file":"static/js/3.a552d160.chunk.js","mappings":"wLACA,G,QAA0B,0BAA1B,EAAkE,8BAAlE,EAAyG,wBAAzG,EAA4I,0BAA5I,EAA+K,wB,mBCiB/K,EATwC,SAACA,GACrC,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OACI,gBAAKC,UAAS,UAAKC,EAAL,YAAiBA,GAA/B,UACI,SAAC,KAAD,CAASC,GAAIJ,EAAb,SAAoBD,EAAMM,UCFtC,EAJqC,SAACN,GAClC,OAAO,gBAAKG,UAAWC,EAAhB,SAA2BJ,EAAMO,W,UCsC5C,EAlCqC,SAACP,GAClC,OAAwCQ,EAAAA,EAAAA,MAAjCC,EAAP,EAAOA,SAAUC,EAAjB,EAAiBA,aAAcC,EAA/B,EAA+BA,MAC3BC,EAAQZ,EAAMa,YAEdC,EAAkBF,EAAMG,QAAQC,KAAI,SAAAC,GAAC,OAAI,SAAC,EAAD,CAAYX,KAAMW,EAAEX,KAAMJ,GAAIe,EAAEf,IAASe,EAAEf,OACpFgB,EAAmBN,EAAMO,SAASH,KAAI,SAAAI,GAAC,OAAI,SAAC,EAAD,CAASb,QAASa,EAAEb,SAAca,EAAElB,OAOnF,OACI,iBAAKC,UAAWC,EAAhB,WACI,gBAAKD,UAAWC,EAAhB,SACKU,KAEL,iBAAKX,UAAWC,EAAhB,WACI,yBAAMc,KACN,0BACI,kBAAMG,SAAUX,GAbf,SAACO,GACdjB,EAAMsB,mBAAmBL,EAAEV,SAC3BI,OAWY,WACI,0BACI,6BAAUY,YAAY,sBAAyBd,EAAS,UAAW,CAACe,UAAU,EAAMC,UAAW,WAEnG,0BACI,mD,8BCftBH,EAAqBI,EAAAA,EAAAA,mBAE3B,GAAeC,EAAAA,EAAAA,KACXC,EAAAA,EAAAA,KAToB,SAAChB,GACrB,MAAO,CACHC,YAAaD,EAAMC,eAO6D,CAACS,mBAAAA,IACrFO,EAAAA,EAFJ,CAEsBC","sources":["webpack://social-network/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/Dialogs.tsx","components/Dialogs/DialogsContainer.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__+bmeu\",\"dialogsItems\":\"Dialogs_dialogsItems__CLenm\",\"active\":\"Dialogs_active__ACRUU\",\"messages\":\"Dialogs_messages__Jingt\",\"dialog\":\"Dialogs_dialog__LG09z\"};","import React from 'react';\r\nimport s from \"../Dialogs.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\ntype PropsType = {\r\n    id: number\r\n    name: string\r\n}\r\n\r\nconst DialogItem: React.FC<PropsType> = (props) => {\r\n    let path = \"/dialogs/\" + props.id\r\n    return (\r\n        <div className={`${s.dialog} ${s.active}`}>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from \"../Dialogs.module.css\";\r\n\r\ntype PropsType = {\r\n    message: string\r\n}\r\n\r\nconst Message: React.FC<PropsType> = (props) => {\r\n    return <div className={s.dialog}>{props.message}</div>\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport s from './Dialogs.module.css'\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport {InitialStateType} from \"../../redux/dialogsReducer\";\r\n\r\ntype PropsType = {\r\n    dialogsPage: InitialStateType\r\n    sendMessageCreator: (newMessageBody: string) => void\r\n}\r\n\r\nconst Dialogs: React.FC<PropsType> = (props) => {\r\n    const {register, handleSubmit, reset} = useForm();\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} id={d.id} key={d.id}/>)\r\n    let messagesElements = state.messages.map(m => <Message message={m.message} key={m.id}/>)\r\n\r\n    const onSubmit = (d: any) => {\r\n        props.sendMessageCreator(d.message);\r\n        reset();\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messagesElements}</div>\r\n                <div>\r\n                    <form onSubmit={handleSubmit(onSubmit)}>\r\n                        <div>\r\n                            <textarea placeholder='Enter your message' {...register(\"message\", {required: true, maxLength: 200})}></textarea>\r\n                        </div>\r\n                        <div>\r\n                            <button>Send</button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport {InitialStateType, actions} from \"../../redux/dialogsReducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport withAuthRedirect from \"../HOC/withAuthRedirect\";\r\nimport {compose} from \"@reduxjs/toolkit\";\r\nimport {AppStateType} from \"../../redux/store\";\r\n\r\ntype MapStatePropsType = {\r\n    dialogsPage: InitialStateType\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    sendMessageCreator: (newMessageBody: string) => void\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\n\r\nconst sendMessageCreator = actions.sendMessageCreator;\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect<MapStatePropsType, MapDispatchPropsType, {}, AppStateType>(mapStateToProps, {sendMessageCreator}),\r\n    withAuthRedirect)(Dialogs);"],"names":["props","path","id","className","s","to","name","message","useForm","register","handleSubmit","reset","state","dialogsPage","dialogsElements","dialogs","map","d","messagesElements","messages","m","onSubmit","sendMessageCreator","placeholder","required","maxLength","actions","compose","connect","withAuthRedirect","Dialogs"],"sourceRoot":""}